{"ast":null,"code":"var _jsxFileName = \"/Users/saiyam/git/Kubernetes-crash-course-2025/frontend/src/components/TicTacToe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport logo from '../assets/kubesimplify-logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicTacToe = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true); // User is X, computer is O\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const calculateWinner = squares => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n    // Rows\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\n    // Columns\n    [0, 4, 8], [2, 4, 6] // Diagonals\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  };\n  const isBoardFull = squares => {\n    return squares.every(square => square !== null);\n  };\n  const updateGameStats = async winner => {\n    try {\n      const token = localStorage.getItem('token');\n      console.log('Retrieved token:', token);\n      const stats = {\n        game_type: 'tic-tac-toe',\n        wins: winner === 'X' ? 1 : 0,\n        // User wins if X wins\n        losses: winner === 'O' ? 1 : 0 // User loses if O (computer) wins\n      };\n      if (!winner) {\n        // Draw: neither a win nor a loss\n        stats.wins = 0;\n        stats.losses = 0;\n      }\n      const fullUrl = '/api/game/game/stats';\n      console.log('Updating RPS stats at:', fullUrl); // Debug log\n      const response = await axios.post(fullUrl, stats, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Tic-Tac-Toe stats updated:', response.data);\n    } catch (err) {\n      console.error('Error updating Tic-Tac-Toe stats:', err.response ? err.response.data : err.message);\n    }\n  };\n  const makeComputerMove = () => {\n    const emptyIndices = board.map((square, index) => square === null ? index : null).filter(index => index !== null);\n    if (emptyIndices.length === 0) return;\n    const randomIndex = emptyIndices[Math.floor(Math.random() * emptyIndices.length)];\n    const newBoard = [...board];\n    newBoard[randomIndex] = 'O';\n    setBoard(newBoard);\n    setIsXNext(true);\n\n    // Check for winner or draw after computer's move\n    const newWinner = calculateWinner(newBoard);\n    if (newWinner || isBoardFull(newBoard)) {\n      setGameOver(true);\n      setWinner(newWinner);\n      updateGameStats(newWinner);\n    }\n  };\n  useEffect(() => {\n    if (!isXNext && !gameOver && !calculateWinner(board)) {\n      setTimeout(() => {\n        makeComputerMove();\n      }, 500); // Delay for better UX\n    }\n  }, [isXNext]); // Only depend on isXNext to prevent multiple triggers\n\n  const handleClick = index => {\n    if (!isXNext || gameOver || board[index] || calculateWinner(board)) return;\n    const newBoard = [...board];\n    newBoard[index] = 'X';\n    setBoard(newBoard);\n    setIsXNext(false);\n\n    // Check for winner or draw after user's move\n    const newWinner = calculateWinner(newBoard);\n    if (newWinner || isBoardFull(newBoard)) {\n      setGameOver(true);\n      setWinner(newWinner);\n      updateGameStats(newWinner);\n    }\n  };\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setIsXNext(true);\n    setGameOver(false);\n    setWinner(null);\n  };\n  const status = winner ? `Winner: ${winner === 'X' ? 'You' : 'Computer'}` : isBoardFull(board) && !winner ? 'Draw!' : `Your turn (X)`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col items-center py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"Kubesimplify\",\n      className: \"max-w-xs h-auto mx-auto rounded-lg shadow-md mb-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-blue-500 mb-4\",\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 text-lg font-medium\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-1 w-64 h-64 bg-gray-200 p-2 rounded-lg shadow-md\",\n      children: board.map((square, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-full h-full bg-white border-2 border-gray-400 text-4xl font-bold flex items-center justify-center hover:bg-gray-100 transition duration-200\",\n        onClick: () => handleClick(index),\n        children: square\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      className: \"mt-4 bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition duration-300\",\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/dashboard\",\n      className: \"text-blue-500 hover:underline mt-6\",\n      children: \"Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(TicTacToe, \"oZUOtvQ+7E+p+V4Yx9Y6zPWcjlw=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","useEffect","axios","logo","jsxDEV","_jsxDEV","TicTacToe","_s","board","setBoard","Array","fill","isXNext","setIsXNext","gameOver","setGameOver","winner","setWinner","calculateWinner","squares","lines","i","length","a","b","c","isBoardFull","every","square","updateGameStats","token","localStorage","getItem","console","log","stats","game_type","wins","losses","fullUrl","response","post","headers","Authorization","data","err","error","message","makeComputerMove","emptyIndices","map","index","filter","randomIndex","Math","floor","random","newBoard","newWinner","setTimeout","handleClick","resetGame","status","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","_c","$RefreshReg$"],"sources":["/Users/saiyam/git/Kubernetes-crash-course-2025/frontend/src/components/TicTacToe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport logo from '../assets/kubesimplify-logo.png';\n\nconst TicTacToe = () => {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true); // User is X, computer is O\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n\n  const calculateWinner = (squares) => {\n    const lines = [\n      [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows\n      [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns\n      [0, 4, 8], [2, 4, 6], // Diagonals\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  };\n\n  const isBoardFull = (squares) => {\n    return squares.every((square) => square !== null);\n  };\n\n  const updateGameStats = async (winner) => {\n    try {\n      const token = localStorage.getItem('token');\n      console.log('Retrieved token:', token);\n      const stats = {\n        game_type: 'tic-tac-toe',\n        wins: winner === 'X' ? 1 : 0, // User wins if X wins\n        losses: winner === 'O' ? 1 : 0, // User loses if O (computer) wins\n      };\n      if (!winner) {\n        // Draw: neither a win nor a loss\n        stats.wins = 0;\n        stats.losses = 0;\n      }\n      const fullUrl = '/api/game/game/stats';\n      console.log('Updating RPS stats at:', fullUrl); // Debug log\n      const response = await axios.post(fullUrl, stats, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      console.log('Tic-Tac-Toe stats updated:', response.data);\n    } catch (err) {\n      console.error('Error updating Tic-Tac-Toe stats:', err.response ? err.response.data : err.message);\n    }\n  };\n\n  const makeComputerMove = () => {\n    const emptyIndices = board\n      .map((square, index) => (square === null ? index : null))\n      .filter((index) => index !== null);\n    if (emptyIndices.length === 0) return;\n\n    const randomIndex = emptyIndices[Math.floor(Math.random() * emptyIndices.length)];\n    const newBoard = [...board];\n    newBoard[randomIndex] = 'O';\n    setBoard(newBoard);\n    setIsXNext(true);\n\n    // Check for winner or draw after computer's move\n    const newWinner = calculateWinner(newBoard);\n    if (newWinner || isBoardFull(newBoard)) {\n      setGameOver(true);\n      setWinner(newWinner);\n      updateGameStats(newWinner);\n    }\n  };\n\n  useEffect(() => {\n    if (!isXNext && !gameOver && !calculateWinner(board)) {\n      setTimeout(() => {\n        makeComputerMove();\n      }, 500); // Delay for better UX\n    }\n  }, [isXNext]); // Only depend on isXNext to prevent multiple triggers\n\n  const handleClick = (index) => {\n    if (!isXNext || gameOver || board[index] || calculateWinner(board)) return;\n\n    const newBoard = [...board];\n    newBoard[index] = 'X';\n    setBoard(newBoard);\n    setIsXNext(false);\n\n    // Check for winner or draw after user's move\n    const newWinner = calculateWinner(newBoard);\n    if (newWinner || isBoardFull(newBoard)) {\n      setGameOver(true);\n      setWinner(newWinner);\n      updateGameStats(newWinner);\n    }\n  };\n\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setIsXNext(true);\n    setGameOver(false);\n    setWinner(null);\n  };\n\n  const status = winner\n    ? `Winner: ${winner === 'X' ? 'You' : 'Computer'}`\n    : isBoardFull(board) && !winner\n    ? 'Draw!'\n    : `Your turn (X)`;\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center py-8\">\n      <img src={logo} alt=\"Kubesimplify\" className=\"max-w-xs h-auto mx-auto rounded-lg shadow-md mb-6\" />\n      <h2 className=\"text-3xl font-bold text-blue-500 mb-4\">Tic Tac Toe</h2>\n      <div className=\"mb-4 text-lg font-medium\">{status}</div>\n      <div className=\"grid grid-cols-3 gap-1 w-64 h-64 bg-gray-200 p-2 rounded-lg shadow-md\">\n        {board.map((square, index) => (\n          <button\n            key={index}\n            className=\"w-full h-full bg-white border-2 border-gray-400 text-4xl font-bold flex items-center justify-center hover:bg-gray-100 transition duration-200\"\n            onClick={() => handleClick(index)}\n          >\n            {square}\n          </button>\n        ))}\n      </div>\n      <button\n        onClick={resetGame}\n        className=\"mt-4 bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition duration-300\"\n      >\n        Reset Game\n      </button>\n      <a href=\"/dashboard\" className=\"text-blue-500 hover:underline mt-6\">Back to Dashboard</a>\n    </div>\n  );\n};\n\nexport default TicTacToe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}