{"ast":null,"code":"var _jsxFileName = \"/Users/saiyam/git/Kubernetes-crash-course-2025/frontend/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport logo from '../assets/kubesimplify-logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Snake = () => {\n  _s();\n  const [snake, setSnake] = useState([{\n    x: 10,\n    y: 10\n  }]);\n  const [food, setFood] = useState({\n    x: 15,\n    y: 15\n  });\n  const [direction, setDirection] = useState('RIGHT');\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const boardSize = 20;\n  const speed = 200;\n  useEffect(() => {\n    if (!gameStarted || gameOver) return;\n    const moveSnake = () => {\n      setSnake(prevSnake => {\n        const newSnake = [...prevSnake];\n        const head = {\n          ...newSnake[0]\n        };\n        switch (direction) {\n          case 'RIGHT':\n            head.x += 1;\n            break;\n          case 'LEFT':\n            head.x -= 1;\n            break;\n          case 'UP':\n            head.y -= 1;\n            break;\n          case 'DOWN':\n            head.y += 1;\n            break;\n          default:\n            break;\n        }\n\n        // Check for collision with walls\n        if (head.x < 0 || head.x >= boardSize || head.y < 0 || head.y >= boardSize) {\n          setGameOver(true);\n          return prevSnake;\n        }\n\n        // Check for collision with self\n        for (let i = 1; i < newSnake.length; i++) {\n          if (head.x === newSnake[i].x && head.y === newSnake[i].y) {\n            setGameOver(true);\n            return prevSnake;\n          }\n        }\n        newSnake.unshift(head);\n\n        // Check if food is eaten\n        if (head.x === food.x && head.y === food.y) {\n          setScore(prevScore => {\n            const newScore = prevScore + 1;\n            // Update high score in backend\n            try {\n              let token = localStorage.getItem('token');\n              if (token && token.startsWith('Bearer ')) {\n                token = token.split(' ')[1];\n              }\n              console.log('Retrieved token:', token);\n              const fullUrl = '/api/game/snake/score';\n              console.log('Updating RPS stats at:', fullUrl); // Debug log\n              axios.post(fullUrl, {\n                score: newScore\n              }, {\n                headers: {\n                  Authorization: `Bearer ${token}`\n                }\n              }).then(response => {\n                console.log('Snake score updated:', response.data);\n              }).catch(err => {\n                console.error('Error updating score:', err.response ? err.response.data : err.message);\n              });\n            } catch (err) {\n              console.error('Error in score update request:', err);\n            }\n            return newScore;\n          });\n          setFood({\n            x: Math.floor(Math.random() * boardSize),\n            y: Math.floor(Math.random() * boardSize)\n          });\n        } else {\n          newSnake.pop();\n        }\n        return newSnake;\n      });\n    };\n    const interval = setInterval(moveSnake, speed);\n    return () => clearInterval(interval);\n  }, [snake, direction, food, gameStarted, gameOver]);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      switch (e.key) {\n        case 'ArrowUp':\n          if (direction !== 'DOWN') setDirection('UP');\n          break;\n        case 'ArrowDown':\n          if (direction !== 'UP') setDirection('DOWN');\n          break;\n        case 'ArrowLeft':\n          if (direction !== 'RIGHT') setDirection('LEFT');\n          break;\n        case 'ArrowRight':\n          if (direction !== 'LEFT') setDirection('RIGHT');\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [direction]);\n  const startGame = () => {\n    setSnake([{\n      x: 10,\n      y: 10\n    }]);\n    setFood({\n      x: 15,\n      y: 15\n    });\n    setDirection('RIGHT');\n    setScore(0);\n    setGameOver(false);\n    setGameStarted(true);\n  };\n  const board = Array(boardSize).fill().map(() => Array(boardSize).fill(''));\n  snake.forEach(segment => {\n    board[segment.y][segment.x] = 'snake';\n  });\n  board[food.y][food.x] = 'food';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col items-center py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"Kubesimplify\",\n      className: \"max-w-xs h-auto mx-auto rounded-lg shadow-md mb-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-blue-500 mb-4\",\n      children: \"Snake Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), !gameStarted && !gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      className: \"bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition duration-300 mb-4\",\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xl font-bold\",\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        className: \"bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition duration-300 mt-2\",\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg font-medium mb-4\",\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 border-blue-500 p-2 rounded-lg\",\n      children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-6 h-6 border border-gray-300 ${cell === 'snake' ? 'bg-green-500' : cell === 'food' ? 'bg-red-500' : 'bg-white'}`\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/dashboard\",\n      className: \"text-blue-500 hover:underline mt-6\",\n      children: \"Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(Snake, \"hSUWncxIXudanCih8DQSKciYC/U=\");\n_c = Snake;\nexport default Snake;\nvar _c;\n$RefreshReg$(_c, \"Snake\");","map":{"version":3,"names":["React","useState","useEffect","axios","logo","jsxDEV","_jsxDEV","Snake","_s","snake","setSnake","x","y","food","setFood","direction","setDirection","score","setScore","gameOver","setGameOver","gameStarted","setGameStarted","boardSize","speed","moveSnake","prevSnake","newSnake","head","i","length","unshift","prevScore","newScore","token","localStorage","getItem","startsWith","split","console","log","fullUrl","post","headers","Authorization","then","response","data","catch","err","error","message","Math","floor","random","pop","interval","setInterval","clearInterval","handleKeyPress","e","key","window","addEventListener","removeEventListener","startGame","board","Array","fill","map","forEach","segment","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","row","rowIndex","cell","colIndex","href","_c","$RefreshReg$"],"sources":["/Users/saiyam/git/Kubernetes-crash-course-2025/frontend/src/components/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport logo from '../assets/kubesimplify-logo.png';\n\nconst Snake = () => {\n  const [snake, setSnake] = useState([{ x: 10, y: 10 }]);\n  const [food, setFood] = useState({ x: 15, y: 15 });\n  const [direction, setDirection] = useState('RIGHT');\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n\n  const boardSize = 20;\n  const speed = 200;\n\n  useEffect(() => {\n    if (!gameStarted || gameOver) return;\n\n    const moveSnake = () => {\n      setSnake((prevSnake) => {\n        const newSnake = [...prevSnake];\n        const head = { ...newSnake[0] };\n\n        switch (direction) {\n          case 'RIGHT':\n            head.x += 1;\n            break;\n          case 'LEFT':\n            head.x -= 1;\n            break;\n          case 'UP':\n            head.y -= 1;\n            break;\n          case 'DOWN':\n            head.y += 1;\n            break;\n          default:\n            break;\n        }\n\n        // Check for collision with walls\n        if (head.x < 0 || head.x >= boardSize || head.y < 0 || head.y >= boardSize) {\n          setGameOver(true);\n          return prevSnake;\n        }\n\n        // Check for collision with self\n        for (let i = 1; i < newSnake.length; i++) {\n          if (head.x === newSnake[i].x && head.y === newSnake[i].y) {\n            setGameOver(true);\n            return prevSnake;\n          }\n        }\n\n        newSnake.unshift(head);\n\n        // Check if food is eaten\n        if (head.x === food.x && head.y === food.y) {\n          setScore((prevScore) => {\n            const newScore = prevScore + 1;\n            // Update high score in backend\n            try {\n              let token = localStorage.getItem('token');\n              if (token && token.startsWith('Bearer ')) {\n                token = token.split(' ')[1];\n              }\n              console.log('Retrieved token:', token);\n\n              const fullUrl = '/api/game/snake/score';\n              console.log('Updating RPS stats at:', fullUrl); // Debug log\n              axios.post(fullUrl, { score: newScore }, {\n                headers: { Authorization: `Bearer ${token}` },\n              }).then((response) => {\n                console.log('Snake score updated:', response.data);\n              }).catch((err) => {\n                console.error('Error updating score:', err.response ? err.response.data : err.message);\n              });\n            } catch (err) {\n              console.error('Error in score update request:', err);\n            }\n            return newScore;\n          });\n          setFood({\n            x: Math.floor(Math.random() * boardSize),\n            y: Math.floor(Math.random() * boardSize),\n          });\n        } else {\n          newSnake.pop();\n        }\n\n        return newSnake;\n      });\n    };\n\n    const interval = setInterval(moveSnake, speed);\n    return () => clearInterval(interval);\n  }, [snake, direction, food, gameStarted, gameOver]);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      switch (e.key) {\n        case 'ArrowUp':\n          if (direction !== 'DOWN') setDirection('UP');\n          break;\n        case 'ArrowDown':\n          if (direction !== 'UP') setDirection('DOWN');\n          break;\n        case 'ArrowLeft':\n          if (direction !== 'RIGHT') setDirection('LEFT');\n          break;\n        case 'ArrowRight':\n          if (direction !== 'LEFT') setDirection('RIGHT');\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [direction]);\n\n  const startGame = () => {\n    setSnake([{ x: 10, y: 10 }]);\n    setFood({ x: 15, y: 15 });\n    setDirection('RIGHT');\n    setScore(0);\n    setGameOver(false);\n    setGameStarted(true);\n  };\n\n  const board = Array(boardSize).fill().map(() => Array(boardSize).fill(''));\n\n  snake.forEach(segment => {\n    board[segment.y][segment.x] = 'snake';\n  });\n  board[food.y][food.x] = 'food';\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center py-8\">\n      <img src={logo} alt=\"Kubesimplify\" className=\"max-w-xs h-auto mx-auto rounded-lg shadow-md mb-6\" />\n      <h2 className=\"text-3xl font-bold text-blue-500 mb-4\">Snake Game</h2>\n      {!gameStarted && !gameOver && (\n        <button\n          onClick={startGame}\n          className=\"bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition duration-300 mb-4\"\n        >\n          Start\n        </button>\n      )}\n      {gameOver && (\n        <div className=\"text-center mb-4\">\n          <p className=\"text-red-500 text-xl font-bold\">Game Over!</p>\n          <button\n            onClick={startGame}\n            className=\"bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition duration-300 mt-2\"\n          >\n            Restart\n          </button>\n        </div>\n      )}\n      <p className=\"text-lg font-medium mb-4\">Score: {score}</p>\n      <div className=\"border-2 border-blue-500 p-2 rounded-lg\">\n        {board.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"flex\">\n            {row.map((cell, colIndex) => (\n              <div\n                key={colIndex}\n                className={`w-6 h-6 border border-gray-300 ${\n                  cell === 'snake' ? 'bg-green-500' : cell === 'food' ? 'bg-red-500' : 'bg-white'\n                }`}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n      <a href=\"/dashboard\" className=\"text-blue-500 hover:underline mt-6\">Back to Dashboard</a>\n    </div>\n  );\n};\n\nexport default Snake;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}